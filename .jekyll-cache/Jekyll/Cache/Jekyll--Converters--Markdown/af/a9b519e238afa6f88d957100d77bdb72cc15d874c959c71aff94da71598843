I"vI<p>Update:新公司项目使用storybook进行组件展示</p>

<hr />

<p>凭借着过人的理解能力和超乎常人的水平踏入了一家外企。
目前接手的项目是基于react的官网,要求使用storybook进行组件测试和管理。之前没用过,所以来踩踩坑
#####. 首先在项目根目录创建.storybook文件夹
其中包含了addons.js config.js webpack.config.js</p>

<ol>
  <li>addons.js 用于管理插件 目前我引入了以下三个包
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="k">import</span> <span class="dl">'</span><span class="s1">@storybook/addon-storysource/register</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">@storybook/addon-actions/register</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="dl">'</span><span class="s1">@storybook/addon-links/register</span><span class="dl">'</span><span class="p">;</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>config.js 用于引入需要展示的组件。
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
</pre></td><td class="rouge-code"><pre><span class="k">import</span> <span class="p">{</span> <span class="nx">configure</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@storybook/react</span><span class="dl">'</span><span class="p">;</span>
<span class="kd">function</span> <span class="nx">loadStories</span><span class="p">()</span> <span class="p">{</span>
  <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">../src/js/components/stories/lis.js</span><span class="dl">'</span><span class="p">);</span>
  <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">../src/js/components/stories/buttons.js</span><span class="dl">'</span><span class="p">);</span>
  <span class="c1">// require('../src/js/components/stories/heroSlider.js');</span>
  <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">../src/js/components/stories/sectionTitle.js</span><span class="dl">'</span><span class="p">);</span>
  <span class="c1">// You can require as many stories as you need.</span>
  <span class="c1">// 这里的路径需要注意</span>
<span class="p">}</span>
<span class="nx">configure</span><span class="p">(</span><span class="nx">loadStories</span><span class="p">,</span> <span class="nx">module</span><span class="p">);</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
  </li>
  <li>
    <p>webpack.config.js 用于配置一些路径等问题</p>

    <p>遇到了两个问题
1.需要将组件代码展示在页面中，使用了addon-storysoure插件仍然需要添加代码
2.需要展示的组件中使用了alias,storybook默认不读取相关配置。</p>
    <div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
</pre></td><td class="rouge-code"><pre> <span class="kd">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="dl">'</span><span class="s1">path</span><span class="dl">'</span><span class="p">);</span>
 <span class="kd">const</span> <span class="nx">storysource</span> <span class="o">=</span> <span class="nx">require</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="dl">'</span><span class="s1">@storybook/addon-storysource/loader</span><span class="dl">'</span><span class="p">)</span>
 <span class="kd">const</span> <span class="nx">PATH_SRC</span> <span class="o">=</span> <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="dl">'</span><span class="s1">../src</span><span class="dl">'</span><span class="p">);</span> <span class="c1">//这里的路径需要注意一下</span>
 <span class="kd">const</span> <span class="nx">PATH_JS</span> <span class="o">=</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_SRC</span><span class="p">}</span><span class="s2">/js`</span><span class="p">;</span>
 <span class="kd">const</span> <span class="nx">resolve</span> <span class="o">=</span> <span class="p">{</span>
   <span class="na">extensions</span><span class="p">:</span> <span class="p">[</span><span class="dl">'</span><span class="s1">.js</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">.jsx</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">.css</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">.scss</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">.json</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">.html</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">.ico</span><span class="dl">'</span><span class="p">],</span>
   <span class="na">alias</span><span class="p">:</span> <span class="p">{</span>
     <span class="na">store</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/store`</span><span class="p">,</span>
     <span class="na">controllers</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/controllers`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@constants</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/constants`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@pages</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/components/pages`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@layouts</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/components/layouts`</span><span class="p">,</span>
     <span class="na">routes</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/routes`</span><span class="p">,</span>
     <span class="na">scss</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_SRC</span><span class="p">}</span><span class="s2">/scss`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@api</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/api`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@components</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/components`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@bootstrap</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/bootstrap`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@utils</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/utils`</span><span class="p">,</span>
     <span class="dl">'</span><span class="s1">@propTypes</span><span class="dl">'</span><span class="p">:</span> <span class="s2">`</span><span class="p">${</span><span class="nx">PATH_JS</span><span class="p">}</span><span class="s2">/propTypes`</span><span class="p">,</span>
   <span class="p">}</span>
 <span class="p">}</span>
 <span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span><span class="p">({</span> <span class="nx">config</span> <span class="p">})</span> <span class="p">{</span>
   <span class="nx">config</span><span class="p">.</span><span class="nx">module</span><span class="p">.</span><span class="nx">rules</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span>
     <span class="na">test</span><span class="p">:</span> <span class="sr">/</span><span class="se">\.</span><span class="sr">jsx</span><span class="se">?</span><span class="sr">$/</span><span class="p">,</span>
     <span class="na">loaders</span><span class="p">:</span> <span class="p">[</span><span class="nx">storysource</span><span class="p">],</span>
     <span class="na">include</span><span class="p">:</span> <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">__dirname</span><span class="p">,</span> <span class="dl">'</span><span class="s1">../</span><span class="dl">'</span><span class="p">),</span> <span class="c1">// 这里是解决问题1的地方</span>
     <span class="na">enforce</span><span class="p">:</span> <span class="dl">'</span><span class="s1">pre</span><span class="dl">'</span><span class="p">,</span>
   <span class="p">});</span>
   <span class="nx">config</span><span class="p">.</span><span class="nx">resolve</span> <span class="o">=</span> <span class="nx">resolve</span>

   <span class="k">return</span> <span class="nx">config</span><span class="p">;</span>
 <span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div>    </div>
    <h5 id="在components目录下创建storyies文件夹">在components目录下创建storyies文件夹</h5>
    <p>其中包含 sectionTitle.js等 这个就是在conifg中引入的文件</p>
  </li>
</ol>

<p>一般的普通组件代码如下</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
</pre></td><td class="rouge-code"><pre><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">storiesOf</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@storybook/react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Button</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@storybook/react/demo</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">action</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@storybook/addon-actions</span><span class="dl">'</span><span class="p">;</span>
<span class="nx">storiesOf</span><span class="p">(</span><span class="dl">'</span><span class="s1">Buttons</span><span class="dl">'</span><span class="p">,</span> <span class="nx">module</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">with text</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">Button</span> <span class="nx">onClick</span><span class="o">=</span><span class="p">{</span><span class="nx">action</span><span class="p">(</span><span class="dl">'</span><span class="s1">clicked</span><span class="dl">'</span><span class="p">)}</span><span class="o">&gt;</span><span class="nx">Hello</span> <span class="nx">Button111</span><span class="o">&lt;</span><span class="sr">/Button</span><span class="err">&gt;
</span>  <span class="p">));</span>

</pre></td></tr></tbody></table></code></pre></div></div>

<p>但是遇到的问题是组件嵌套过深,同时使用了redux
那么就需要在同级目录下先创建provider</p>
<div class="language-jsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
</pre></td><td class="rouge-code"><pre><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Provider</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-redux</span><span class="dl">'</span>

<span class="kd">const</span> <span class="nx">ProviderWrapper</span> <span class="o">=</span> <span class="p">({</span> <span class="nx">children</span><span class="p">,</span> <span class="nx">store</span> <span class="p">})</span> <span class="o">=&gt;</span> <span class="p">(</span>
  <span class="p">&lt;</span><span class="nc">Provider</span> <span class="na">store=</span><span class="si">{</span><span class="nx">store</span><span class="si">}</span><span class="p">&gt;</span>
      <span class="si">{</span> <span class="nx">children</span> <span class="si">}</span>
  <span class="p">&lt;/</span><span class="nc">Provider</span><span class="p">&gt;</span>
<span class="p">)</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">ProviderWrapper</span>

</pre></td></tr></tbody></table></code></pre></div></div>
<p>然后在sectionTitle.js中引入</p>
<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
</pre></td><td class="rouge-code"><pre><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">storiesOf</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">@storybook/react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">SectionTitle</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../paragraphs/SectionTitle</span><span class="dl">'</span><span class="p">;</span><span class="c1">//此处是我使用的组件</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">createStore</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../../store/index</span><span class="dl">'</span><span class="p">;</span><span class="c1">//此处是本项目使用的redux</span>
<span class="k">import</span> <span class="nx">ProviderWrapper</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./ProviderWrapper</span><span class="dl">'</span><span class="p">;</span><span class="c1">//此处是同级的provider</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">sectionTitle</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./data.js</span><span class="dl">'</span><span class="p">;</span><span class="c1">//此处是该组件需要使用的data</span>
<span class="cm">/* eslint-disable */</span>
<span class="kd">const</span> <span class="nx">store</span> <span class="o">=</span> <span class="nx">createStore</span><span class="p">();</span>

<span class="kd">const</span> <span class="nx">withProvider</span> <span class="o">=</span> <span class="p">(</span><span class="nx">story</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">(</span>
  <span class="o">&lt;</span><span class="nx">ProviderWrapper</span> <span class="nx">store</span><span class="o">=</span><span class="p">{</span><span class="nx">store</span><span class="p">}</span><span class="o">&gt;</span>
    <span class="p">{</span> <span class="nx">story</span><span class="p">()</span> <span class="p">}</span>
  <span class="o">&lt;</span><span class="sr">/ProviderWrapper</span><span class="err">&gt;
</span><span class="p">)</span>

<span class="nx">storiesOf</span><span class="p">(</span><span class="dl">'</span><span class="s1">sectionTitle</span><span class="dl">'</span><span class="p">,</span> <span class="nx">module</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">addDecorator</span><span class="p">(</span><span class="nx">withProvider</span><span class="p">)</span>
  <span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="dl">'</span><span class="s1">normal</span><span class="dl">'</span><span class="p">,</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">(</span>
    <span class="o">&lt;</span><span class="nx">SectionTitle</span> <span class="nx">paragraph</span><span class="o">=</span><span class="p">{</span><span class="nx">sectionTitle</span><span class="p">}</span><span class="o">&gt;&lt;</span><span class="sr">/SectionTitle</span><span class="err">&gt;
</span>  <span class="p">));</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p>其他的配置官方文档还是比较全的</p>

<p>这次坑先踩到这</p>
:ET